{"version":3,"sources":["App.js","services/UserService.js","index.js"],"names":["App","props","state","AllUsers","HoursStatistics","CitiesStatistics","this","getUsersData","fetch","then","response","json","data","setState","users","hourStatistics","forEach","user","push","name","hours","citiesStatistics","places","city","undefined","Object","keys","map","index","unshift","GetCityStatistics","className","href","style","display","maxWidth","width","height","chartType","loader","options","title","chartArea","hAxis","minValue","vAxis","legendToggle","item","key","place","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a9c5fd8.chunk.js","sourcesContent":["import React from 'react';\nimport 'antd/dist/antd.css';\nimport Chart from \"react-google-charts\";\n\n\nimport './App.css';\nimport {GetCityStatistics, GetUsers} from \"./services/UserService\";\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            AllUsers: [],\n            HoursStatistics: [],\n            CitiesStatistics : []\n        }\n    }\n\n    componentDidMount() {\n        this.getUsersData();\n    }\n\n    getUsersData() {\n        GetUsers()\n            .then(data => {\n                this.setState({\n                    AllUsers: data.users\n                });\n\n                let hourStatistics = [['User', 'Hours']];\n                this.state.AllUsers.forEach(user => hourStatistics.push([user.name, user.hours]));\n                this.setState({\n                    HoursStatistics: hourStatistics\n                });\n                const citiesStatistics = GetCityStatistics(this.state.AllUsers);\n                this.setState( {\n                    CitiesStatistics: citiesStatistics\n                });\n            });\n    }\n\n\n    render () {\n        return (\n            <div className=\"container\">\n                <nav>\n                    <div className=\"nav-wrapper\">\n                        <a href=\"#\" className=\"brand-logo\">My app</a>\n                    </div>\n                </nav>\n                    <main className=\"\">\n                        <div className=\"App-graph\">\n            <div style={{ display: 'flex', maxWidth: 600 }}>\n\n    <Chart\n        width={600}\n        height={300}\n        chartType=\"ColumnChart\"\n        loader={<div>Loading Chart</div>}\n        data={this.state.HoursStatistics}\n        options={{\n            title: 'Dream hours',\n                chartArea: { width: '30%' },\n            hAxis: {\n                minValue: 0,\n            },\n            vAxis: {\n                title: 'Hours',\n            },\n        }}\n\n        />\n        </div>\n        <div style={{ display: 'flex', maxWidth: 600 }}>\n\n    <Chart\n        width={600}\n        height={300}\n        chartType=\"ColumnChart\"\n        loader={<div>Loading Chart</div>}\n        data={this.state.CitiesStatistics}\n        options={{\n            title: 'Cities visited',\n                chartArea: { width: '30%' },\n            hAxis: {\n                minValue: 0,\n            },\n            vAxis: {\n                title: 'Cities',\n            },\n        }}\n        legendToggle\n        />\n        </div>\n                        </div>\n                            <table className=\"striped\">\n                                <thead>\n                                    <tr>\n                                        <th>Name</th>\n                                        <th>Dream hours</th>\n                                        <th>Place</th>\n                                    </tr>\n                                </thead>\n                            <tbody>\n                            {this.state.AllUsers\n                                .map((item, index) => {\n                                    return (\n                                        <tr key={index}>\n                                        <td >{item.name}</td>\n                                        <td >{item.hours}</td>\n                                        <td >{item.places.map(place => <span className=\"chip\">{place}</span>)}</td>\n                                        </tr>\n                                    );\n                                })}\n                            </tbody>\n                            </table>\n                    </main>\n                    <footer className=\"page-footer\">\n                                <div className=\"container\">\n                                <div className=\"row\">\n                                <div className=\"col l6 s12\">\n                                <h5 className=\"white-text\">Footer Content</h5>\n        <p className=\"grey-text text-lighten-4\">You can use rows and columns here to organize your footer content.</p>\n        </div>\n        <div className=\"col l4 offset-l2 s12\">\n            <h5 className=\"white-text\">Links</h5>\n            <ul>\n            <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 1</a></li>\n        <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 2</a></li>\n        <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 3</a></li>\n        <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Link 4</a></li>\n        </ul>\n        </div>\n        </div>\n        </div>\n        <div className=\"footer-copyright\">\n            <div className=\"container\">\n            Â© 2014 Copyright Text\n        <a className=\"grey-text text-lighten-4 right\" href=\"#!\">More Links</a>\n        </div>\n        </div>\n                    </footer>\n            </div>\n        )\n    };\n}\n\nexport default App;\n","const url = \"UsersList.json\";\n\nexport const GetUsers = () => {\n    return fetch(url)\n        .then(response => response.json());\n};\n\nexport const GetCityStatistics = (users) => {\n    let citiesStatistics = {};\n    users.forEach( user =>{\n        user.places.forEach( city => {\n            if (citiesStatistics[city] === undefined ) citiesStatistics[city] = 1\n            else citiesStatistics[city] = citiesStatistics[city] + 1\n        })\n    });\n    citiesStatistics = Object.keys(citiesStatistics).map ( function(city, index) {\n        return [city, citiesStatistics[city]];\n    })\n    citiesStatistics.unshift(['City', 'Visits'])\n    return citiesStatistics;\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}